<?php
	require_once("config.php"); //Contains api key and merchant code
		
	//Only do something, if the old order was already progressed by the erp system
	if(!file_exists($csvPath)){	
		generateOrderCsv(readOrdersFromApi());
	}
	else{
		echo "File already exists!";
	}


/*
 * Reads the latest orders from the CDiscount Api
 *
 * @return string   $result    The json string, that cdiscount returned
 */
function readOrdersFromApi(){
	require("config.php"); //Contains api key and merchant code
	
	// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
	$ch = curl_init();

	curl_setopt($ch, CURLOPT_URL, 'https://api.imn.io/merchant/orders/v1/'.$merch_code.'/list/full');
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($ch, CURLOPT_POST, 1);
	curl_setopt($ch, CURLOPT_POSTFIELDS, 
	"{  
		\n   \"imnOrderStatuses\": [  
			\n     \"InProgress\"  
		\n   ], 
		\n   \"dateSearchType\": \"IMNModification\",  
		
		\n   \"beginPeriodUtcDate\": \"".$lastDate."\",  
		\n   \"endPeriodUtcDate\": \"".$currentDate."\",  
		
		\n   \"pageSize\": \"100\",  
		\n   \"pageNumber\": \"1\", 
		
		\n   \"sort\": {  
			\n     \"by\": \"IMNModificationDate\",  
			\n     \"option\": \"Ascending\"  
	\n   	}  
	\n }"
	);

	$headers = array();
	$headers[] = 'Content-Type: application/json';
	$headers[] = 'Accept: application/json';
	$headers[] = 'Accept-Encoding: false';
	$headers[] = 'Ocp-Apim-Subscription-Key: '.$api_key;
	curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

	$result = curl_exec($ch);
	if (curl_errno($ch)) {
	    echo 'Error:' . curl_error($ch);
	}
	curl_close($ch);
	
	return $result;
}



/*
 * Writes the json order data to csv
 */
function generateOrderCsv($json){
	require("config.php"); //Contains api key and merchant code
	
	$data = json_decode($json); //Json file that we get to decode
	$csv = ""; //CSV file, that will be generated
	$orders = $data->orders; //All new orders as array
	
	//Loop through orders
	for($i = 0; $i < sizeof($orders); $i++){
		$order = $orders[$i];
		$orderDate = $order->info->generalInfo->purchaseUtcDate;
		echo "ORDERDATE: ".$orderDate;
		
		$articles = $order->info->orderItems;
	
		//Loop throught articles
		for($x = 0; $x < sizeof($articles); $x++){
			$article = $articles[$x];
			$deliveryAdr = $order->info->shippingInfo->address;
			$billingAdr = $order->info->billingInfo->address;
							
			$csv .= "\r\n";
			$csv .= $order->info->identifier->marketplaceOrderId.";"; //Order number
			$csv .= $order->info->generalInfo->purchaseUtcDate.";"; //Order date
			$csv .= $order->info->billingInfo->customer->email.";"; //EMail
			$csv .= $article->merchantOfferSku.";"; //ArticleNumber
			$csv .= $article->quantity.";"; //ArticleQuantity
			$csv .= $article->itemPrice.";"; //ArticlePrice
			$csv .= $order->info->shippingInfo->contact->firstName." "; //DeliveryClient (first name)
			$csv .= $order->info->shippingInfo->contact->lastName." "; //DeliveryClient (last name)
			$csv .= $order->info->shippingInfo->contact->companyName.";"; //DeliveryClient (company name)
			$csv .= $deliveryAdr->line2.";"; //DeliveryClient2
			$csv .= $deliveryAdr->line1.";"; //DeliveryStreet
			$csv .= $deliveryAdr->postalCode.";"; //DeliveryZIP
			$csv .= $deliveryAdr->city.";"; //DeliveryCity
			$csv .= $deliveryAdr->countryName.";"; //DeliveryCountry
			$csv .= $order->info->billingInfo->customer->firstName." "; //DeliveryClient (first name)
			$csv .= $order->info->billingInfo->customer->lastName." "; //DeliveryClient (last name)
			$csv .= $order->info->billingInfo->customer->companyName.";"; //DeliveryClient (company name)
			$csv .= $billingAdr->line2.";"; //DeliveryClient2
			$csv .= $billingAdr->line1.";"; //DeliveryStreet
			$csv .= $billingAdr->postalCode.";"; //DeliveryZIP
			$csv .= $billingAdr->city.";"; //DeliveryCity
			$csv .= $billingAdr->countryName.";"; //DeliveryCountry
			$csv .= $order->info->shippingInfo->contact->mobilePhoneNumber.";"; //Phone
			$csv .= $order->info->shippingInfo->price.";"; //Shipping
			$csv .= $order->info->pricingInfo->totalCommission.""; //Fees
			$csv .= $order->info->identifier->marketplaceCode.""; //Marketplace Code
		}	
	}
	
	//If we have a csv file, add a headline to it and write it
	if($csv !== ""){
	    $csv = generateCSVHeadline().$csv;
	    
	    writeCsv($csv);
	    
	    writeCurrentDateTime();
	}
	else{
		echo "No new orders from " . $lastDate . " to " . $currentDate;
	}
	
	
}

/*
 * Generates the headline of the csv file.
 * 
 * @return string   $csv_headline    The headline for the csv file.
 */
function generateCSVHeadline(){
    $csv_headline = ""
            . "OrderNumber;OrderDate;EMail;"
            . "ArticleNumber;ArticleQuantity;ArticlePrice;"
            . "DeliveryClient;DeliveryClient2;DeliveryStreet;"
            . "DeliveryZIP;DeliveryCity;DeliveryCountry;"
            . "InvoiceClient;InvoiceClient2;InvoiceStreet;"
            . "InvoiceZIP;InvoiceCity;InvoiceCountry;"
            . "Phone;Shipping;Fees;Marketplace";
    return $csv_headline;
}



/*
 * Creates a csv file from a string.
 * 
 * @input string    $csv    Csv content, that should be written to a file
 */
function writeCsv($csv){
	require("config.php");
	echo $csv;
    
	$fp = fopen($csvPath, 'w');
	fwrite($fp, $csv);
	fclose($fp);
}



/*
 * Writes the current DateTime to a file.
 */
function writeCurrentDateTime(){
	require("config.php");
	
	$date = new DateTime();
    
	$fp = fopen($dateTimePath, 'w');
	fwrite($fp, $currentDate);
	fclose($fp);
}